name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  MIX_ENV: test

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        elixir: ['1.17.3']
        otp: ['27.2']
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Elixir and Erlang
      uses: erlef/setup-beam@v1
      with:
        elixir-version: ${{ matrix.elixir }}
        otp-version: ${{ matrix.otp }}
        
    - name: Cache Mix dependencies
      uses: actions/cache@v4
      with:
        path: |
          deps
          _build
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-mix-
          
    - name: Install Mix dependencies
      run: mix deps.get
      
    - name: Check code formatting
      run: mix format --check-formatted
      
    - name: Run Credo for code analysis
      run: mix credo --strict
      
    - name: Setup test database
      run: |
        MIX_ENV=test mix ecto.create
        MIX_ENV=test mix ecto.migrate
        
    - name: Run tests
      run: mix test --cover
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
        cache-dependency-path: 'assets/package-lock.json'
        
    - name: Install npm dependencies
      run: npm install --prefix assets
      
    - name: Build assets
      run: mix assets.deploy

  deploy:
    name: Deploy to Fly.io
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Elixir and Erlang  
      uses: erlef/setup-beam@v1
      with:
        elixir-version: '1.17.3'
        otp-version: '27.2'
        
    - name: Cache Mix dependencies
      uses: actions/cache@v4
      with:
        path: |
          deps
          _build
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-mix-
          
    - name: Install Mix dependencies
      run: mix deps.get --only prod
      
    - name: Setup Node.js for assets
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
        cache-dependency-path: 'assets/package-lock.json'
        
    - name: Install npm dependencies
      run: npm install --prefix assets
      
    - name: Build assets for production
      run: mix assets.deploy
      
    - name: Build Elixir release
      env:
        MIX_ENV: prod
      run: |
        mix compile
        mix release --overwrite
        
    - name: Setup Fly CLI
      uses: superfly/flyctl-actions/setup-flyctl@master
      
    - name: Deploy to Fly.io
      env:
        FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
      run: |
        # Deploy using the built release (no Docker)
        flyctl deploy --local-only